<!DOCTYPE html>

<!--
	Това е макет на първото домашно задание по ОКГ.	Задачата
	е да направите вашия йероглиф само чрез използваните до
	момента в упражненията неща.
	
	Йероглифът трябва да е с размери 20х20 и дебелина 10.
	Най-горе на страницата трябва да сложите име, фамилия,
	група и факултетен номер.
	
	Макетът създава и движи сцената, земята и светлините
	чрез функцията createScene(). Ако ѝ се подаде true,
	то се рисува прозрачна кутия с малко по-големи размери,
	в която да се постави йероглифа.
	
	За да не е празен макетът, има код за създаванена седем
	наклонени плоскости. Махнете този код и сложете своя
	код за йероглифа.
-->
	
<html>
	<head>
		<script src="three.min.js"></script>

		<script>
			// функция за създаване на сцената
			function createScene(addFrame)
			{
				// нагласяване на цвета и центрирането на текста с имената ви
				document.getElementsByTagName('h1')[0].style = 'color:white; text-align:center;';

				// създаване на рисувателното поле на цял екран
				renderer = new THREE.WebGLRenderer({antialias:true});
				renderer.setSize( window.innerWidth, window.innerHeight );
				document.body.appendChild( renderer.domElement );
				renderer.domElement.style = 'width:100%; height:100%; position:fixed; top:0; left:0; z-index:-1;';
				
				// създаване на сцена и камера
				scene = new THREE.Scene();
				camera = new THREE.PerspectiveCamera( 30, window.innerWidth/window.innerHeight, 0.1, 1000 );

				// създаване на земята като плоска равнина
				var ground = new THREE.Mesh(
					new THREE.PlaneGeometry(13000,13000),
					new THREE.MeshPhongMaterial({color:'goldenrod'})
				);
				ground.position.set(0,-11,0);
				ground.rotation.set(-Math.PI/2,0,0);
				scene.add( ground );

				// ако сме поискали (чрез параметър true),
				// създаваме полупрозрачна рамка около зоната,
				//в която трябва да е поместен йероглифа
				/*if (addFrame)
				{
					// прозрачи стени
					var walls = new THREE.Mesh(
						new THREE.BoxGeometry(21,21,11),
						new THREE.MeshPhongMaterial({color:'white',shininess:220,opacity:0.6,transparent:true,side:THREE.DoubleSide})
					);
					scene.add(walls);

					// тънък бял кант
					var frame = new THREE.BoxHelper(walls);
					frame.material.color.set('white');
					scene.add( frame );
				}*/

				// създаване на четири светлини с различни цветове
				lights=[];
				var colors=['dodgerblue','hotpink','cyan','fuchsia'];
				for (var i=0; i<4; i++)
				{
					lights[i] = new THREE.PointLight(colors[i],1);
					scene.add(lights[i]);
				}
				
				// активиране на анимацията
				drawFrame();
			}
			
			// функция за анимиране на сцената
			var t = 0; // време
			function drawFrame()
			{
				requestAnimationFrame( drawFrame );
				
				t++;
				
				// леко въртене на сцената
				scene.rotation.x = Math.sin(t/135)/10;
				scene.rotation.y = Math.sin(t/200)/2;
				scene.rotation.z = Math.cos(t/111)/10;

				// приближаване и отдалечаване на камерата
				camera.position.set(0,3,60+10*Math.sin(t/250));
				camera.lookAt(new THREE.Vector3(0,0,0));

				// движение на светлините
				for (var i=0; i<4; i++)
				{
					var angle = t/100+Math.PI/2*i;
					lights[i].position.set(
						15*Math.cos(angle),
						10*Math.sin(1.5*angle)+5,
						10);
				}
				
				//рисуване на сцената
				renderer.render( scene, camera );
			}		
		</script>
	</head>
	
	<body>
		<!-- тук сложете вашите данни -->
		<h1>ф.н. 81277 &ndash; група 7 &ndash; Иван Маргаритов</h1>

		<script>
			createScene(true); // true=има рамка; false=няма рамка
			
			var kanji = new THREE.Object3D();
			scene.add(kanji);
			
			var geometry = new THREE.BoxGeometry( 10, 1.5, 10 );
			var material = new THREE.MeshPhongMaterial();
			var horPlateDown = new THREE.Mesh( geometry, material );
			kanji.add( horPlateDown );
			
			var horPlateDown1 = new THREE.Mesh( geometry, material );
			horPlateDown1.position.set(0,-2.5,0);
			kanji.add( horPlateDown1 );
			
			var horPlateDown2 = new THREE.Mesh( geometry, material );
			horPlateDown2.position.set(0,-5,0);
			kanji.add( horPlateDown2 );
			
			var horPlateDown3 = new THREE.Mesh( geometry, material );
			horPlateDown3.position.set(0,-7.5,0);
			kanji.add( horPlateDown3 );
			
			var horPlateUpperLeft = new THREE.Mesh( geometry, material );
			horPlateUpperLeft.position.set(-4,5.6,0);
			kanji.add( horPlateUpperLeft );
			
			var geometry = new THREE.BoxGeometry( 1.5, 10, 10 );
			var material = new THREE.MeshPhongMaterial();
			var verDownPlate = new THREE.Mesh( geometry, material );
			verDownPlate.position.set(5.5,-4.25,0);
			kanji.add( verDownPlate );
			
			var verDownPlate1 = new THREE.Mesh( geometry, material );
			verDownPlate1.position.set(-5.5,-4.25,0);
			kanji.add( verDownPlate1 );
			
			var geometry = new THREE.BoxGeometry(1.5,4.4,10);
			var material = new THREE.MeshPhongMaterial();
			var verPlateUpperLeft = new THREE.Mesh( geometry, material);
			verPlateUpperLeft.position.set(-5,8,0);
			kanji.add( verPlateUpperLeft );
			
			var geometry = new THREE.BoxGeometry(4.2,1.5,10);
			var material = new THREE.MeshPhongMaterial();
			var horPlateUpperLeft1 = new THREE.Mesh( geometry, material);
			horPlateUpperLeft1.position.set(-2.2,8,0);
			kanji.add( horPlateUpperLeft1 );
			
			var geometry = new THREE.BoxGeometry(1.5,2,10);
			var material = new THREE.MeshPhongMaterial();
			var verPlateUpperLeft1 = new THREE.Mesh( geometry, material);
			verPlateUpperLeft1.position.set(-3.8,4,0);
			kanji.add( verPlateUpperLeft1 );
			
			var geometry = new THREE.BoxGeometry(7,1.5,10);
			var material = new THREE.MeshPhongMaterial();
			var horPlateUpperRight = new THREE.Mesh( geometry, material);
			horPlateUpperRight.position.set(4,8.4,0);
			kanji.add( horPlateUpperRight );
			
			//горе вдясно, дясна крива част
			
			var groupLeft = new THREE.Object3D();
			scene.add(groupLeft);
			
			var geometry = new THREE.BoxGeometry(0.1,1.5,10);
			var material= new THREE.MeshPhongMaterial();
			for(var i=0;i<100;i++)
			{
				var alpha=2*Math.PI*i/100/15;
				var r=-21;
				var cube=new THREE.Mesh (geometry, material);
				cube.position.set(r*Math.cos(alpha),r*Math.sin(alpha),0);
				
				cube.rotateZ(Math.PI/2);
				groupLeft.add(cube);
			}
			groupLeft.position.set(-11.13,18.8,0);
			groupLeft.rotateZ(2.2);
			
			//горе вдясно, лява крива част
			
			var groupLeft1 = new THREE.Object3D();
			scene.add(groupLeft1);
			
			var geometry = new THREE.BoxGeometry(0.1,1.5,10);
			var material= new THREE.MeshPhongMaterial();
			for(var i=0;i<100;i++)
			{
				var alpha=2*Math.PI*i/100/15;
				var r=22;
				var cube=new THREE.Mesh (geometry, material);
				cube.position.set(r*Math.cos(alpha),r*Math.sin(alpha),0);
				
				cube.rotateZ(Math.PI/2);
				groupLeft1.add(cube);
			}
			groupLeft1.position.set(21.7,18,0);
			groupLeft1.rotateZ(3.6);
			
			//горе вляво, долна крива част вдясно
			
			var groupRight = new THREE.Object3D();
			scene.add(groupRight);
			
			var geometry = new THREE.BoxGeometry(0.1,1.5,10);
			var material= new THREE.MeshPhongMaterial();
			for(var i=0;i<100;i++)
			{
				var alpha=2*Math.PI*i/100/15;
				var r=6.5;
				var cube=new THREE.Mesh (geometry, material);
				cube.position.set(r*Math.cos(alpha),r*Math.sin(alpha),0);
				
				cube.rotateZ(Math.PI/2);
				groupRight.add(cube);
			}
			groupRight.position.set(-4.7,-2,0);
			groupRight.rotation.z=0.74;
			
			//горе вляво, долна крива част вляво
			
			var groupRight1 = new THREE.Object3D();
			scene.add(groupRight1);
			
			var geometry = new THREE.BoxGeometry(0.1,1.5,10);
			var material= new THREE.MeshPhongMaterial();
			for(var i=0;i<100;i++)
			{
				var alpha=2*Math.PI*i/100/15;
				var r=8;
				var cube=new THREE.Mesh (geometry, material);
				cube.position.set(r*Math.cos(alpha),r*Math.sin(alpha),0);
				
				cube.rotateZ(Math.PI/2);
				groupRight1.add(cube);
			}
			groupRight1.position.set(-14.3,7.7,0);
			groupRight1.rotateZ(-0.9);
			
			//горе вляво, крива част в центъра
			
			var groupRight2 = new THREE.Object3D();
			scene.add(groupRight2);
			
			var geometry = new THREE.BoxGeometry(0.1,1.5,10);
			var material= new THREE.MeshPhongMaterial();
			for(var i=0;i<100;i++)
			{
				var alpha=2*Math.PI*i/100/15;
				var r=3;
				var cube=new THREE.Mesh (geometry, material);
				cube.position.set(r*Math.cos(alpha),r*Math.sin(alpha),0);
				
				cube.rotateZ(Math.PI/2);
				groupRight2.add(cube);
			}
			groupRight2.position.set(-6.78,3.3,0);
			groupRight2.rotateZ(-0.4);
			
			var groupRight3 = new THREE.Object3D();
			scene.add(groupRight3);
			
			var geometry = new THREE.BoxGeometry(0.1,1.5,10);
			var material= new THREE.MeshPhongMaterial();
			for(var i=0;i<100;i++)
			{
				var alpha=2*Math.PI*i/100/15;
				var r=2;
				var cube=new THREE.Mesh (geometry, material);
				cube.position.set(r*Math.sin(alpha),r*Math.cos(alpha),0);
				
				cube.rotateZ(Math.PI/2);
				groupRight3.add(cube);
			}
			groupRight3.rotateZ(-3);
			groupRight3.position.set(-4.42,3.71,0);
			
			var groupRight4 = new THREE.Object3D();
			scene.add(groupRight4);
			
			var geometry = new THREE.BoxGeometry(0.1,1.4,10);
			var material= new THREE.MeshPhongMaterial();
			for(var i=0;i<100;i++)
			{
				var alpha=2*Math.PI*i/100/15;
				var r=-4;
				var cube=new THREE.Mesh (geometry, material);
				cube.position.set(r*Math.cos(alpha),r*Math.sin(alpha),0);
				
				cube.rotateZ(Math.PI/2);
				groupRight4.add(cube);
			}
			groupRight4.position.set(-5.2,6.3,0);
			groupRight4.rotateZ(1.5);
			
			var geometry = new THREE.BoxGeometry(2.1,1,10);
			var material= new THREE.MeshPhongMaterial();
			var cube=new THREE.Mesh (geometry,material);
			cube.position.set(-4.63, 2.2 ,0);
			cube.rotation.z=0.1;
			scene.add(cube);
			
			
			var geometry = new THREE.CylinderGeometry( 0.9, 0.9, 10, 3 );
			var material = new THREE.MeshPhongMaterial();
			var cylinder = new THREE.Mesh( geometry, material );
			cylinder.rotation.x=Math.PI/2;
			cylinder.rotation.y=Math.PI/2;
			cylinder.rotation.y=0.04;
		
			
			cylinder.position.set(-5.73,2.555,0);
			scene.add( cylinder );
		</script>
	</body>
</html>
